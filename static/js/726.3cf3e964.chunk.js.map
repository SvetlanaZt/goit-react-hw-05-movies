{"version":3,"file":"static/js/726.3cf3e964.chunk.js","mappings":"6QAAO,SAAeA,IAAtB,4CAAO,OAAP,oBAAO,oFACS,mCADT,SAEUC,MAAM,yDAAD,OADN,qCAGVC,MAAK,SAAAC,GACP,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAM,0FAElB,OAAOF,EAAIG,MACZ,IATI,0GAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,uEACS,mCADT,SAEUP,MAAM,sCAAD,OACwBO,EADxB,4BADN,qCAGVN,MAAK,SAAAC,GACP,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAM,0FAElB,OAAOF,EAAIG,MACZ,IATI,0GAYA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,uEACS,mCADT,SAEUP,MAAM,sCAAD,OACwBO,EADxB,oBADN,qCAGVN,MAAK,SAAAC,GACP,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAM,0FAElB,OAAOF,EAAIG,MACZ,IATI,0GAYA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,uEACS,mCADT,SAEUV,MAAM,qDAAD,OADN,mCACM,kBACoDU,IACpET,MAAK,SAAAC,GACP,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAM,0FAElB,OAAOF,EAAIG,MACZ,IATI,0G,oHChCQ,SAASM,IACpB,OAA2BC,EAAAA,EAAAA,UAAS,IAApC,eAAOC,EAAP,KAAeC,EAAf,KAEQP,GAAYQ,EAAAA,EAAAA,MAAZR,QAQP,OAPDS,QAAQC,IAAIV,IAEZW,EAAAA,EAAAA,YAAU,YACNZ,EAAAA,EAAAA,GAAUC,GAASN,MAAK,SAAAkB,GAAI,OAAIL,EAASK,EAAKC,KAAlB,GAC/B,GAAE,CAACb,KAIJ,0BAAK,wBACMM,GAAUA,EAAOQ,KAAI,SAAAC,GAAK,OACvB,2BACI,gBAAKC,IAAG,yCAAoCD,EAAME,cAAgBC,IAAKH,EAAMZ,KAAMgB,MAAM,WAC/F,uBAAIJ,EAAMZ,QACV,wCAAgBY,EAAMK,eAHXL,EAAMM,GADQ,OAQxC,C","sources":["api/api.jsx","components/pages/Cast/cast.jsx"],"sourcesContent":["export async function fetchHome() {\n    const key = 'a42a61c067e66eee5834012056e5662a';\n    return await fetch(\n        `https://api.themoviedb.org/3/trending/all/day?api_key=${key}`\n    ).then(res => {\n    if (!res.ok) {\n      throw new Error('Не пришли данные');\n    }\n    return res.json();\n  });\n}\n\nexport async function fetchCast(movieId) {\n    const key = 'a42a61c067e66eee5834012056e5662a';\n    return await fetch(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${key}`\n    ).then(res => {\n    if (!res.ok) {\n      throw new Error('Не пришли данные');\n    }\n    return res.json();\n  });\n}\n\nexport async function fetchHomeMovies(movieId) {\n    const key = 'a42a61c067e66eee5834012056e5662a';\n    return await fetch(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=${key}`\n    ).then(res => {\n    if (!res.ok) {\n      throw new Error('Не пришли данные');\n    }\n    return res.json();\n  });\n}\n\nexport async function fetcMovies(name) {\n    const key = 'a42a61c067e66eee5834012056e5662a';\n    return await fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${name}`\n    ).then(res => {\n    if (!res.ok) {\n      throw new Error('Не пришли данные');\n    }\n    return res.json();\n  });\n}","import { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport {fetchCast} from 'api/api'\n\nexport default function Cast() {\n    const [movies, setMovie] = useState('');\n\n    const { movieId } = useParams()\n    console.log(movieId)\n\n    useEffect(() => {\n        fetchCast(movieId).then(data => setMovie(data.cast))\n    }, [movieId])\n\n\n     return (\n    <div><ul>\n              {movies && movies.map(movie => (\n                  <li key={movie.id}>\n                      <img src={`https://image.tmdb.org/t/p/w500${movie.profile_path}`} alt={movie.name} width='100px'></img>\n                <p>{movie.name}</p>\n                <p>Character : {movie.character}</p></li>\n              ))}\n          </ul> \n          </div>)\n}"],"names":["fetchHome","fetch","then","res","ok","Error","json","fetchCast","movieId","fetchHomeMovies","fetcMovies","name","Cast","useState","movies","setMovie","useParams","console","log","useEffect","data","cast","map","movie","src","profile_path","alt","width","character","id"],"sourceRoot":""}